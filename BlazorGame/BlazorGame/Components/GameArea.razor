@using BlazorGame.Models

@if (game == null)
{
    <em>Loading...</em>
}
else
{
    <div class="game-area" tabindex="0"  @onkeyup="HandleKeyUp">
        <div class="fog" hidden="@hideFog"></div>
        
        <div class="message-area">
            <Dialog DisplayMode="@GetDialogDisplayMode()" OnClickAction="game.StartStopGame" />
            <HighScores DisplayMode="@GetHighScoresDisplayMode()" CurrentScore="game.Stats.Score" CurrentStage="game.Stats.StageNumber" />
            <Checkpoint Hidden="@hideCheckpoint" StageManager="game.StageManager"></Checkpoint>
        </div>                
        <Stats Model="@game.Stats"/>
        <div class="sky @skyCss"></div>
        <div class="ground @groundCss">
            <Scenery Manager="game.SceneryManager"></Scenery>
            <div class="road">
                <MedianStrip Manager="game.MedianStripManager"></MedianStrip>
                <AICars Manager="game.AICarManager"></AICars>
                <PlayerCar Model="game.PlayerCar" />
            </div>
        </div>
    </div>
}

@code {

    GameModel game { get; set; }

    private string skyCss => $"sky-{game.StageManager.CurrentStage.Name}";
    private string groundCss => $"ground-{game.StageManager.CurrentStage.Name}";
    private bool hideFog => !game.StageManager.CurrentStage.ShowFog;
    private bool hideCheckpoint => !game.StageManager.ShowCheckpoint;

    protected override void OnInitialized()
    {
        game = new GameModel();
        game.MainLoopCompleted += (o, e) => StateHasChanged();
    }

    private DialogDisplayMode GetDialogDisplayMode()
    {
        var mode = DialogDisplayMode.Hide;
        if(!game.IsRunning && !game.IsComplete && !game.PlayerCar.HasCollision)
        {
            mode = DialogDisplayMode.Start;
        }
        else if (game.PlayerCar.HasCollision)
        {
            mode = DialogDisplayMode.GameOver;
        }
        else if (game.IsComplete)
        {
            mode = DialogDisplayMode.Complete;
        }

        return mode;
    }

    private HighScoresDisplayMode GetHighScoresDisplayMode()
    {
        return game.IsRunning ? HighScoresDisplayMode.Hide : HighScoresDisplayMode.Button;
    }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        if(game.IsRunning)
        {
            if (e.Key == "ArrowLeft")
            {
                game.MovePlayerCarLeft();
            }

            if (e.Key == "ArrowRight")
            {
                game.MovePlayerCarRight();
            }

            if (e.Key == "C" || e.Key == "c")
            {
                game.ToggleCollisionsEnabled();
            }
        }
        if(e.Key == " ")
        {
            game.StartStopGame();
        }
    }
}