@using BlazorGame.Models

@if (_game == null)
{
    <em>Loading...</em>
}
else
{
    <div class="game-area" tabindex="0"  @onkeyup="HandleKeyUp">
        <div class="fog" hidden="@_hideFog"></div>
        <div class="message-area">
            <Dialog DisplayMode="@GetDialogDisplayMode()" OnClickAction="_game.StartStopGame" />
            <HighScores DisplayMode="@GetHighScoresDisplayMode()" CurrentScore ="_game.Stats.Score" CurrentStage="_game.Stats.StageNumber" />
        </div>                
        <Stats Model="@_game.Stats"/>
        <div class="sky @_skyCss"></div>
        <div class="ground @_groundCss">
            <div class="road">
                <div class="median-strip">
                    @foreach (var medianStripe in _game.MedianStripes)
                    {
                        <MedianStripes Model="medianStripe" />
                    }
                </div>
                @foreach (var aiCar in _game.AICars)
                {
                    <AICar Model="aiCar" />
                }
                <PlayerCar Model="_game.PlayerCar" />
            </div>
        </div>
    </div>
}

@code {

    GameModel _game { get; set; }

    private string _skyCss => $"sky-{_game.Stages[_game.StageIndex]}";
    private string _groundCss => $"ground-{_game.Stages[_game.StageIndex]}";
    private bool _hideFog => !_game.ShowFog;

    protected override void OnInitialized()
    {
        _game = new GameModel();
        _game.MainLoopCompleted += (o, e) => StateHasChanged();
    }

    private DialogDisplayMode GetDialogDisplayMode()
    {
        var mode = DialogDisplayMode.Hide;
        if(!_game.IsRunning && !_game.IsComplete && !_game.PlayerCar.HasCollision)
        {
            mode = DialogDisplayMode.Start;
        }
        else if (_game.PlayerCar.HasCollision)
        {
            mode = DialogDisplayMode.GameOver;
        }
        else if (_game.IsComplete)
        {
            mode = DialogDisplayMode.Complete;
        }

        return mode;
    }

    private HighScoresDisplayMode GetHighScoresDisplayMode()
    {
        return _game.IsRunning ? HighScoresDisplayMode.Hide : HighScoresDisplayMode.Button;
    }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        if(_game.IsRunning)
        {
            if (e.Key == "ArrowLeft")
            {
                _game.MovePlayerCarLeft();
            }

            if (e.Key == "ArrowRight")
            {
                _game.MovePlayerCarRight();
            }

            if (e.Key == "C" || e.Key == "c")
            {
                _game.ToggleCollisionsEnabled();
            }
        }
        if(e.Key == " ")
        {
            _game.StartStopGame();
        }
    }
}