@using Models;

<div class="dialog" hidden="@hidden" @onclick="@InvokeOnClickAction">
    <h1>@heading</h1>
    @if (!string.IsNullOrEmpty(subHeading))
    {
        <p>@subHeading</p>
    }
</div>

@code {
    private string heading => GetHeading();
    private string subHeading => GetSubHeading();
    private bool hidden => DisplayMode == DialogDisplayMode.Hide;

    [Parameter]
    public DialogDisplayMode DisplayMode { get; set; }

    [Parameter]
    public Action OnClickAction { get; set; }

    private string GetHeading()
    {
        var headings = new Dictionary<DialogDisplayMode, string>() {
            { DialogDisplayMode.Start, "Click to Start"},
            { DialogDisplayMode.GameOver, "Game Over!"},
            { DialogDisplayMode.Complete, "You Win!" }
        };

        headings.TryGetValue(DisplayMode, out string heading);
        return heading;
    }

    private string GetSubHeading()
    {
        if(DisplayMode == DialogDisplayMode.GameOver || DisplayMode == DialogDisplayMode.Complete )
        {
            return "Click to Play Again";
        }
        return string.Empty;
    }

    private void InvokeOnClickAction()
    {
        if(OnClickAction != null)
        {
            OnClickAction.Invoke();
        }
    }
}
